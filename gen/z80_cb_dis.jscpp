case 0x00: res="RLC";
res += " B";
break;
case 0x01: res="RLC";
res += " C";
break;
case 0x02: res="RLC";
res += " D";
break;
case 0x03: res="RLC";
res += " E";
break;
case 0x04: res="RLC";
res += " H";
break;
case 0x05: res="RLC";
res += " L";
break;
case 0x06: res="RLC";
res += " (HL)";
break;
case 0x07: res="RLC";
res += " A";
break;
case 0x08: res="RRC";
res += " B";
break;
case 0x09: res="RRC";
res += " C";
break;
case 0x0a: res="RRC";
res += " D";
break;
case 0x0b: res="RRC";
res += " E";
break;
case 0x0c: res="RRC";
res += " H";
break;
case 0x0d: res="RRC";
res += " L";
break;
case 0x0e: res="RRC";
res += " (HL)";
break;
case 0x0f: res="RRC";
res += " A";
break;
case 0x10: res="RL";
res += " B";
break;
case 0x11: res="RL";
res += " C";
break;
case 0x12: res="RL";
res += " D";
break;
case 0x13: res="RL";
res += " E";
break;
case 0x14: res="RL";
res += " H";
break;
case 0x15: res="RL";
res += " L";
break;
case 0x16: res="RL";
res += " (HL)";
break;
case 0x17: res="RL";
res += " A";
break;
case 0x18: res="RR";
res += " B";
break;
case 0x19: res="RR";
res += " C";
break;
case 0x1a: res="RR";
res += " D";
break;
case 0x1b: res="RR";
res += " E";
break;
case 0x1c: res="RR";
res += " H";
break;
case 0x1d: res="RR";
res += " L";
break;
case 0x1e: res="RR";
res += " (HL)";
break;
case 0x1f: res="RR";
res += " A";
break;
case 0x20: res="SLA";
res += " B";
break;
case 0x21: res="SLA";
res += " C";
break;
case 0x22: res="SLA";
res += " D";
break;
case 0x23: res="SLA";
res += " E";
break;
case 0x24: res="SLA";
res += " H";
break;
case 0x25: res="SLA";
res += " L";
break;
case 0x26: res="SLA";
res += " (HL)";
break;
case 0x27: res="SLA";
res += " A";
break;
case 0x28: res="SRA";
res += " B";
break;
case 0x29: res="SRA";
res += " C";
break;
case 0x2a: res="SRA";
res += " D";
break;
case 0x2b: res="SRA";
res += " E";
break;
case 0x2c: res="SRA";
res += " H";
break;
case 0x2d: res="SRA";
res += " L";
break;
case 0x2e: res="SRA";
res += " (HL)";
break;
case 0x2f: res="SRA";
res += " A";
break;
case 0x30: res="SLL";
res += " B";
break;
case 0x31: res="SLL";
res += " C";
break;
case 0x32: res="SLL";
res += " D";
break;
case 0x33: res="SLL";
res += " E";
break;
case 0x34: res="SLL";
res += " H";
break;
case 0x35: res="SLL";
res += " L";
break;
case 0x36: res="SLL";
res += " (HL)";
break;
case 0x37: res="SLL";
res += " A";
break;
case 0x38: res="SRL";
res += " B";
break;
case 0x39: res="SRL";
res += " C";
break;
case 0x3a: res="SRL";
res += " D";
break;
case 0x3b: res="SRL";
res += " E";
break;
case 0x3c: res="SRL";
res += " H";
break;
case 0x3d: res="SRL";
res += " L";
break;
case 0x3e: res="SRL";
res += " (HL)";
break;
case 0x3f: res="SRL";
res += " A";
break;
case 0x40: res="BIT";
res += " 0,B";
break;
case 0x41: res="BIT";
res += " 0,C";
break;
case 0x42: res="BIT";
res += " 0,D";
break;
case 0x43: res="BIT";
res += " 0,E";
break;
case 0x44: res="BIT";
res += " 0,H";
break;
case 0x45: res="BIT";
res += " 0,L";
break;
case 0x46: res="BIT";
res += " 0,(HL)";
break;
case 0x47: res="BIT";
res += " 0,A";
break;
case 0x48: res="BIT";
res += " 1,B";
break;
case 0x49: res="BIT";
res += " 1,C";
break;
case 0x4a: res="BIT";
res += " 1,D";
break;
case 0x4b: res="BIT";
res += " 1,E";
break;
case 0x4c: res="BIT";
res += " 1,H";
break;
case 0x4d: res="BIT";
res += " 1,L";
break;
case 0x4e: res="BIT";
res += " 1,(HL)";
break;
case 0x4f: res="BIT";
res += " 1,A";
break;
case 0x50: res="BIT";
res += " 2,B";
break;
case 0x51: res="BIT";
res += " 2,C";
break;
case 0x52: res="BIT";
res += " 2,D";
break;
case 0x53: res="BIT";
res += " 2,E";
break;
case 0x54: res="BIT";
res += " 2,H";
break;
case 0x55: res="BIT";
res += " 2,L";
break;
case 0x56: res="BIT";
res += " 2,(HL)";
break;
case 0x57: res="BIT";
res += " 2,A";
break;
case 0x58: res="BIT";
res += " 3,B";
break;
case 0x59: res="BIT";
res += " 3,C";
break;
case 0x5a: res="BIT";
res += " 3,D";
break;
case 0x5b: res="BIT";
res += " 3,E";
break;
case 0x5c: res="BIT";
res += " 3,H";
break;
case 0x5d: res="BIT";
res += " 3,L";
break;
case 0x5e: res="BIT";
res += " 3,(HL)";
break;
case 0x5f: res="BIT";
res += " 3,A";
break;
case 0x60: res="BIT";
res += " 4,B";
break;
case 0x61: res="BIT";
res += " 4,C";
break;
case 0x62: res="BIT";
res += " 4,D";
break;
case 0x63: res="BIT";
res += " 4,E";
break;
case 0x64: res="BIT";
res += " 4,H";
break;
case 0x65: res="BIT";
res += " 4,L";
break;
case 0x66: res="BIT";
res += " 4,(HL)";
break;
case 0x67: res="BIT";
res += " 4,A";
break;
case 0x68: res="BIT";
res += " 5,B";
break;
case 0x69: res="BIT";
res += " 5,C";
break;
case 0x6a: res="BIT";
res += " 5,D";
break;
case 0x6b: res="BIT";
res += " 5,E";
break;
case 0x6c: res="BIT";
res += " 5,H";
break;
case 0x6d: res="BIT";
res += " 5,L";
break;
case 0x6e: res="BIT";
res += " 5,(HL)";
break;
case 0x6f: res="BIT";
res += " 5,A";
break;
case 0x70: res="BIT";
res += " 6,B";
break;
case 0x71: res="BIT";
res += " 6,C";
break;
case 0x72: res="BIT";
res += " 6,D";
break;
case 0x73: res="BIT";
res += " 6,E";
break;
case 0x74: res="BIT";
res += " 6,H";
break;
case 0x75: res="BIT";
res += " 6,L";
break;
case 0x76: res="BIT";
res += " 6,(HL)";
break;
case 0x77: res="BIT";
res += " 6,A";
break;
case 0x78: res="BIT";
res += " 7,B";
break;
case 0x79: res="BIT";
res += " 7,C";
break;
case 0x7a: res="BIT";
res += " 7,D";
break;
case 0x7b: res="BIT";
res += " 7,E";
break;
case 0x7c: res="BIT";
res += " 7,H";
break;
case 0x7d: res="BIT";
res += " 7,L";
break;
case 0x7e: res="BIT";
res += " 7,(HL)";
break;
case 0x7f: res="BIT";
res += " 7,A";
break;
case 0x80: res="RES";
res += " 0,B";
break;
case 0x81: res="RES";
res += " 0,C";
break;
case 0x82: res="RES";
res += " 0,D";
break;
case 0x83: res="RES";
res += " 0,E";
break;
case 0x84: res="RES";
res += " 0,H";
break;
case 0x85: res="RES";
res += " 0,L";
break;
case 0x86: res="RES";
res += " 0,(HL)";
break;
case 0x87: res="RES";
res += " 0,A";
break;
case 0x88: res="RES";
res += " 1,B";
break;
case 0x89: res="RES";
res += " 1,C";
break;
case 0x8a: res="RES";
res += " 1,D";
break;
case 0x8b: res="RES";
res += " 1,E";
break;
case 0x8c: res="RES";
res += " 1,H";
break;
case 0x8d: res="RES";
res += " 1,L";
break;
case 0x8e: res="RES";
res += " 1,(HL)";
break;
case 0x8f: res="RES";
res += " 1,A";
break;
case 0x90: res="RES";
res += " 2,B";
break;
case 0x91: res="RES";
res += " 2,C";
break;
case 0x92: res="RES";
res += " 2,D";
break;
case 0x93: res="RES";
res += " 2,E";
break;
case 0x94: res="RES";
res += " 2,H";
break;
case 0x95: res="RES";
res += " 2,L";
break;
case 0x96: res="RES";
res += " 2,(HL)";
break;
case 0x97: res="RES";
res += " 2,A";
break;
case 0x98: res="RES";
res += " 3,B";
break;
case 0x99: res="RES";
res += " 3,C";
break;
case 0x9a: res="RES";
res += " 3,D";
break;
case 0x9b: res="RES";
res += " 3,E";
break;
case 0x9c: res="RES";
res += " 3,H";
break;
case 0x9d: res="RES";
res += " 3,L";
break;
case 0x9e: res="RES";
res += " 3,(HL)";
break;
case 0x9f: res="RES";
res += " 3,A";
break;
case 0xa0: res="RES";
res += " 4,B";
break;
case 0xa1: res="RES";
res += " 4,C";
break;
case 0xa2: res="RES";
res += " 4,D";
break;
case 0xa3: res="RES";
res += " 4,E";
break;
case 0xa4: res="RES";
res += " 4,H";
break;
case 0xa5: res="RES";
res += " 4,L";
break;
case 0xa6: res="RES";
res += " 4,(HL)";
break;
case 0xa7: res="RES";
res += " 4,A";
break;
case 0xa8: res="RES";
res += " 5,B";
break;
case 0xa9: res="RES";
res += " 5,C";
break;
case 0xaa: res="RES";
res += " 5,D";
break;
case 0xab: res="RES";
res += " 5,E";
break;
case 0xac: res="RES";
res += " 5,H";
break;
case 0xad: res="RES";
res += " 5,L";
break;
case 0xae: res="RES";
res += " 5,(HL)";
break;
case 0xaf: res="RES";
res += " 5,A";
break;
case 0xb0: res="RES";
res += " 6,B";
break;
case 0xb1: res="RES";
res += " 6,C";
break;
case 0xb2: res="RES";
res += " 6,D";
break;
case 0xb3: res="RES";
res += " 6,E";
break;
case 0xb4: res="RES";
res += " 6,H";
break;
case 0xb5: res="RES";
res += " 6,L";
break;
case 0xb6: res="RES";
res += " 6,(HL)";
break;
case 0xb7: res="RES";
res += " 6,A";
break;
case 0xb8: res="RES";
res += " 7,B";
break;
case 0xb9: res="RES";
res += " 7,C";
break;
case 0xba: res="RES";
res += " 7,D";
break;
case 0xbb: res="RES";
res += " 7,E";
break;
case 0xbc: res="RES";
res += " 7,H";
break;
case 0xbd: res="RES";
res += " 7,L";
break;
case 0xbe: res="RES";
res += " 7,(HL)";
break;
case 0xbf: res="RES";
res += " 7,A";
break;
case 0xc0: res="SET";
res += " 0,B";
break;
case 0xc1: res="SET";
res += " 0,C";
break;
case 0xc2: res="SET";
res += " 0,D";
break;
case 0xc3: res="SET";
res += " 0,E";
break;
case 0xc4: res="SET";
res += " 0,H";
break;
case 0xc5: res="SET";
res += " 0,L";
break;
case 0xc6: res="SET";
res += " 0,(HL)";
break;
case 0xc7: res="SET";
res += " 0,A";
break;
case 0xc8: res="SET";
res += " 1,B";
break;
case 0xc9: res="SET";
res += " 1,C";
break;
case 0xca: res="SET";
res += " 1,D";
break;
case 0xcb: res="SET";
res += " 1,E";
break;
case 0xcc: res="SET";
res += " 1,H";
break;
case 0xcd: res="SET";
res += " 1,L";
break;
case 0xce: res="SET";
res += " 1,(HL)";
break;
case 0xcf: res="SET";
res += " 1,A";
break;
case 0xd0: res="SET";
res += " 2,B";
break;
case 0xd1: res="SET";
res += " 2,C";
break;
case 0xd2: res="SET";
res += " 2,D";
break;
case 0xd3: res="SET";
res += " 2,E";
break;
case 0xd4: res="SET";
res += " 2,H";
break;
case 0xd5: res="SET";
res += " 2,L";
break;
case 0xd6: res="SET";
res += " 2,(HL)";
break;
case 0xd7: res="SET";
res += " 2,A";
break;
case 0xd8: res="SET";
res += " 3,B";
break;
case 0xd9: res="SET";
res += " 3,C";
break;
case 0xda: res="SET";
res += " 3,D";
break;
case 0xdb: res="SET";
res += " 3,E";
break;
case 0xdc: res="SET";
res += " 3,H";
break;
case 0xdd: res="SET";
res += " 3,L";
break;
case 0xde: res="SET";
res += " 3,(HL)";
break;
case 0xdf: res="SET";
res += " 3,A";
break;
case 0xe0: res="SET";
res += " 4,B";
break;
case 0xe1: res="SET";
res += " 4,C";
break;
case 0xe2: res="SET";
res += " 4,D";
break;
case 0xe3: res="SET";
res += " 4,E";
break;
case 0xe4: res="SET";
res += " 4,H";
break;
case 0xe5: res="SET";
res += " 4,L";
break;
case 0xe6: res="SET";
res += " 4,(HL)";
break;
case 0xe7: res="SET";
res += " 4,A";
break;
case 0xe8: res="SET";
res += " 5,B";
break;
case 0xe9: res="SET";
res += " 5,C";
break;
case 0xea: res="SET";
res += " 5,D";
break;
case 0xeb: res="SET";
res += " 5,E";
break;
case 0xec: res="SET";
res += " 5,H";
break;
case 0xed: res="SET";
res += " 5,L";
break;
case 0xee: res="SET";
res += " 5,(HL)";
break;
case 0xef: res="SET";
res += " 5,A";
break;
case 0xf0: res="SET";
res += " 6,B";
break;
case 0xf1: res="SET";
res += " 6,C";
break;
case 0xf2: res="SET";
res += " 6,D";
break;
case 0xf3: res="SET";
res += " 6,E";
break;
case 0xf4: res="SET";
res += " 6,H";
break;
case 0xf5: res="SET";
res += " 6,L";
break;
case 0xf6: res="SET";
res += " 6,(HL)";
break;
case 0xf7: res="SET";
res += " 6,A";
break;
case 0xf8: res="SET";
res += " 7,B";
break;
case 0xf9: res="SET";
res += " 7,C";
break;
case 0xfa: res="SET";
res += " 7,D";
break;
case 0xfb: res="SET";
res += " 7,E";
break;
case 0xfc: res="SET";
res += " 7,H";
break;
case 0xfd: res="SET";
res += " 7,L";
break;
case 0xfe: res="SET";
res += " 7,(HL)";
break;
case 0xff: res="SET";
res += " 7,A";
break;
