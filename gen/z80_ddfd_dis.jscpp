case 0x09: res="ADD";
res += " " + REGISTER + ",BC";
break;
case 0x19: res="ADD";
res += " " + REGISTER + ",DE";
break;
case 0x21: res="LD";
res += " " + REGISTER + "," + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ""; address += 2;
break;
case 0x22: res="LD";
res += " (" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ")," + REGISTER + ""; address += 2;
break;
case 0x23: res="INC";
res += " " + REGISTER + "";
break;
case 0x24: res="INC";
res += " " + REGISTERH + "";
break;
case 0x25: res="DEC";
res += " " + REGISTERH + "";
break;
case 0x26: res="LD";
res += " " + REGISTERH + ",0x" + hexbyte(readbyte(address)) + ""; address += 1;
break;
case 0x29: res="ADD";
res += " " + REGISTER + "," + REGISTER + "";
break;
case 0x2a: res="LD";
res += " " + REGISTER + ",(" + addressHtml((readbyte(address + 1) << 8) | readbyte(address)) + ")"; address += 2;
break;
case 0x2b: res="DEC";
res += " " + REGISTER + "";
break;
case 0x2c: res="INC";
res += " " + REGISTERL + "";
break;
case 0x2d: res="DEC";
res += " " + REGISTERL + "";
break;
case 0x2e: res="LD";
res += " " + REGISTERL + ",0x" + hexbyte(readbyte(address)) + ""; address += 1;
break;
case 0x34: res="INC";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x35: res="DEC";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x36: res="LD";
res += " (" + REGISTER + "+dd),0x" + hexbyte(readbyte(address)) + ""; address += 1;
break;
case 0x39: res="ADD";
res += " " + REGISTER + ",SP";
break;
case 0x44: res="LD";
res += " B," + REGISTERH + "";
break;
case 0x45: res="LD";
res += " B," + REGISTERL + "";
break;
case 0x46: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " B,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x4c: res="LD";
res += " C," + REGISTERH + "";
break;
case 0x4d: res="LD";
res += " C," + REGISTERL + "";
break;
case 0x4e: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " C,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x54: res="LD";
res += " D," + REGISTERH + "";
break;
case 0x55: res="LD";
res += " D," + REGISTERL + "";
break;
case 0x56: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " D,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x5c: res="LD";
res += " E," + REGISTERH + "";
break;
case 0x5d: res="LD";
res += " E," + REGISTERL + "";
break;
case 0x5e: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " E,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x60: res="LD";
res += " " + REGISTERH + ",B";
break;
case 0x61: res="LD";
res += " " + REGISTERH + ",C";
break;
case 0x62: res="LD";
res += " " + REGISTERH + ",D";
break;
case 0x63: res="LD";
res += " " + REGISTERH + ",E";
break;
case 0x64: res="LD";
res += " " + REGISTERH + "," + REGISTERH + "";
break;
case 0x65: res="LD";
res += " " + REGISTERH + "," + REGISTERL + "";
break;
case 0x66: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " H,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x67: res="LD";
res += " " + REGISTERH + ",A";
break;
case 0x68: res="LD";
res += " " + REGISTERL + ",B";
break;
case 0x69: res="LD";
res += " " + REGISTERL + ",C";
break;
case 0x6a: res="LD";
res += " " + REGISTERL + ",D";
break;
case 0x6b: res="LD";
res += " " + REGISTERL + ",E";
break;
case 0x6c: res="LD";
res += " " + REGISTERL + "," + REGISTERH + "";
break;
case 0x6d: res="LD";
res += " " + REGISTERL + "," + REGISTERL + "";
break;
case 0x6e: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " L,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x6f: res="LD";
res += " " + REGISTERL + ",A";
break;
case 0x70: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + "),B"; address += 1;
break;
case 0x71: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + "),C"; address += 1;
break;
case 0x72: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + "),D"; address += 1;
break;
case 0x73: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + "),E"; address += 1;
break;
case 0x74: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + "),H"; address += 1;
break;
case 0x75: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + "),L"; address += 1;
break;
case 0x77: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " (" + REGISTER + "" + sign + "0x" + hexbyte(offset) + "),A"; address += 1;
break;
case 0x7c: res="LD";
res += " A," + REGISTERH + "";
break;
case 0x7d: res="LD";
res += " A," + REGISTERL + "";
break;
case 0x7e: res="LD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x84: res="ADD";
res += " A," + REGISTERH + "";
break;
case 0x85: res="ADD";
res += " A," + REGISTERL + "";
break;
case 0x86: res="ADD";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x8c: res="ADC";
res += " A," + REGISTERH + "";
break;
case 0x8d: res="ADC";
res += " A," + REGISTERL + "";
break;
case 0x8e: res="ADC";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x94: res="SUB";
res += " A," + REGISTERH + "";
break;
case 0x95: res="SUB";
res += " A," + REGISTERL + "";
break;
case 0x96: res="SUB";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0x9c: res="SBC";
res += " A," + REGISTERH + "";
break;
case 0x9d: res="SBC";
res += " A," + REGISTERL + "";
break;
case 0x9e: res="SBC";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xa4: res="AND";
res += " A," + REGISTERH + "";
break;
case 0xa5: res="AND";
res += " A," + REGISTERL + "";
break;
case 0xa6: res="AND";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xac: res="XOR";
res += " A," + REGISTERH + "";
break;
case 0xad: res="XOR";
res += " A," + REGISTERL + "";
break;
case 0xae: res="XOR";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xb4: res="OR";
res += " A," + REGISTERH + "";
break;
case 0xb5: res="OR";
res += " A," + REGISTERL + "";
break;
case 0xb6: res="OR";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xbc: res="CP";
res += " A," + REGISTERH + "";
break;
case 0xbd: res="CP";
res += " A," + REGISTERL + "";
break;
case 0xbe: res="CP";
var offset = sign_extend(readbyte(address));
var sign = offset > 0 ? "+" : "-";
res += " A,(" + REGISTER + "" + sign + "0x" + hexbyte(offset) + ")"; address += 1;
break;
case 0xcb: return disassemble_DDFDCB(address);
case 0xe1: res="POP";
res += " " + REGISTER + "";
break;
case 0xe3: res="EX";
res += " (SP)," + REGISTER + "";
break;
case 0xe5: res="PUSH";
res += " " + REGISTER + "";
break;
case 0xe9: res="JP";
res += " " + REGISTER + "";
break;
case 0xf9: res="LD";
res += " SP," + REGISTER + "";
break;
